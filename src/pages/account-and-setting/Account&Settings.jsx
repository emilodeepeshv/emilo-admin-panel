import { useState } from 'react';
import { ChevronRight, Settings, MessageSquare, Mail, MoreHorizontal, X, Copy } from 'lucide-react';

const AccountSettings = () => {
  const [authApp, setAuthApp] = useState(true);
  const [textMessage, setTextMessage] = useState(false);
  const [email, setEmail] = useState(false);
  const [showModal, setShowModal] = useState(false);
  const [currentStep, setCurrentStep] = useState(1);
  const [authMethod, setAuthMethod] = useState('');
  const [authCode, setAuthCode] = useState('');
  const [phoneNumber, setPhoneNumber] = useState('');
  const [selectedPhone, setSelectedPhone] = useState('existing');
  const [confirmationCode, setConfirmationCode] = useState('');
  const [countdown, setCountdown] = useState(59);

  const handleMethodSelect = (method) => {
    setAuthMethod(method);
    setShowModal(true);
    setCurrentStep(1);
  };

  const handleNext = () => {
    if (currentStep < 4) {
      setCurrentStep(currentStep + 1);
    } else {
      // Final step - close modal and update settings
      setShowModal(false);
      setCurrentStep(1);
      // Update the respective state based on method
      if (authMethod === 'app') setAuthApp(true);
      if (authMethod === 'sms') setTextMessage(true);
      if (authMethod === 'email') setEmail(true);
    }
  };

  const handleClose = () => {
    setShowModal(false);
    setCurrentStep(1);
    setAuthCode('');
    setPhoneNumber('');
    setConfirmationCode('');
  };

  const copyKey = () => {
    navigator.clipboard.writeText('DUAZ PCTS 5DGA SDPK GMBN Q3CH AXIT SNUQ');
  };

  const renderModalContent = () => {
    switch (currentStep) {
      case 1: // Setup Instructions
        return (
          <div className="p-6">
            <div className="flex justify-between items-center mb-6">
              <h2 className="text-xl font-semibold">Setup Instruction</h2>
              <button onClick={handleClose}>
                <X className="w-5 h-5 text-gray-400" />
              </button>
            </div>

            <div className="space-y-6">
              <div>
                <div className="flex items-center mb-2">
                  <span className="w-6 h-6 bg-blue-500 text-white rounded-full flex items-center justify-center text-sm mr-3">1</span>
                  <h3 className="font-medium text-blue-600">Step 1</h3>
                </div>
                <h4 className="font-medium mb-1">Download an authentication app</h4>
                <p className="text-sm text-gray-500">
                  We recommend downloading Duo Mobile or Google Authenticator if you don't have one installed.
                </p>
              </div>

              <div>
                <div className="flex items-center mb-2">
                  <span className="w-6 h-6 bg-blue-500 text-white rounded-full flex items-center justify-center text-sm mr-3">2</span>
                  <h3 className="font-medium text-blue-600">Step 2</h3>
                </div>
                <h4 className="font-medium mb-1">Scan this barcode/QR code or copy the key</h4>
                <p className="text-sm text-gray-500">
                  Scan this barcode/QR code in the authentication app or copy the key and paste it in the authentication app.
                </p>
              </div>

              <div>
                <div className="flex items-center mb-2">
                  <span className="w-6 h-6 bg-blue-500 text-white rounded-full flex items-center justify-center text-sm mr-3">3</span>
                  <h3 className="font-medium text-blue-600">Step 3</h3>
                </div>
                <h4 className="font-medium mb-1">Copy and enter 6-digit code</h4>
                <p className="text-sm text-gray-500">
                  After the barcode/QR code is scanned or the key is entered, your authentication app will generate a 6-digit code. Copy the code and then come back to Facebook to enter it.
                </p>
              </div>
            </div>

            <button
              onClick={handleNext}
              className="w-full bg-blue-500 text-white py-3 rounded-lg mt-8 hover:bg-blue-600 transition-colors"
            >
              Next
            </button>
          </div>
        );

      case 2: // QR Code / Auth App Code
        return (
          <div className="p-6">
            <div className="flex justify-between items-center mb-6">
              <h2 className="text-xl font-semibold">Get your code from your authentication app</h2>
              <button onClick={handleClose}>
                <X className="w-5 h-5 text-gray-400" />
              </button>
            </div>

            <p className="text-gray-600 mb-8">Enter the 6-digit code generated by your authenticator app</p>

            {authMethod === 'app' && (
              <div className="mb-8">
                <div className="flex items-center justify-center space-x-8">
                  <div className="w-32 h-32 bg-black flex items-center justify-center">
                    {/* QR Code placeholder - in real implementation, use a QR code library */}
                    <div className="grid grid-cols-8 gap-px">
                      {[...Array(64)].map((_, i) => (
                        <div
                          key={i}
                          className={`w-2 h-2 ${Math.random() > 0.5 ? 'bg-black' : 'bg-white'}`}
                        />
                      ))}
                    </div>
                  </div>
                  
                  <div className="text-center">
                    <p className="text-sm text-gray-500 mb-2">Or</p>
                    <div className="bg-gray-100 p-3 rounded text-center mb-3">
                      <div className="font-mono text-sm">DUAZ PCTS 5DGA</div>
                      <div className="font-mono text-sm">SDPK GMBN Q3CH</div>
                      <div className="font-mono text-sm">AXIT SNUQ</div>
                    </div>
                    <button
                      onClick={copyKey}
                      className="bg-blue-500 text-white px-4 py-2 rounded text-sm hover:bg-blue-600 transition-colors flex items-center space-x-2"
                    >
                      <Copy className="w-4 h-4" />
                      <span>Copy Key</span>
                    </button>
                  </div>
                </div>
              </div>
            )}

            <input
              type="text"
              placeholder="Enter Code"
              value={authCode}
              onChange={(e) => setAuthCode(e.target.value)}
              className="w-full p-3 border border-gray-300 rounded-lg mb-8"
            />

            <button
              onClick={handleNext}
              className="w-full bg-blue-500 text-white py-3 rounded-lg hover:bg-blue-600 transition-colors"
            >
              Next
            </button>
          </div>
        );

      case 3: // Phone Number Selection (for SMS method)
        if (authMethod !== 'sms') {
          // Skip this step for non-SMS methods
          handleNext();
          return null;
        }
        
        return (
          <div className="p-6">
            <div className="flex justify-between items-center mb-6">
              <h2 className="text-xl font-semibold">Select or add a phone number</h2>
              <button onClick={handleClose}>
                <X className="w-5 h-5 text-gray-400" />
              </button>
            </div>

            <p className="text-gray-600 mb-8">
              Choose a mobile phone number already on your account or add a new number. This is the number we'll send the login code to.
            </p>

            <div className="space-y-4 mb-8">
              <label className="flex items-center space-x-3 cursor-pointer">
                <input
                  type="radio"
                  name="phone"
                  value="existing"
                  checked={selectedPhone === 'existing'}
                  onChange={(e) => setSelectedPhone(e.target.value)}
                  className="w-4 h-4 text-blue-600"
                />
                <span>••••• •••74</span>
              </label>

              <label className="flex items-center space-x-3 cursor-pointer">
                <input
                  type="radio"
                  name="phone"
                  value="new"
                  checked={selectedPhone === 'new'}
                  onChange={(e) => setSelectedPhone(e.target.value)}
                  className="w-4 h-4 text-blue-600"
                />
                <span>Add Phone Number</span>
              </label>

              {selectedPhone === 'new' && (
                <input
                  type="tel"
                  placeholder="Enter new phone number"
                  value={phoneNumber}
                  onChange={(e) => setPhoneNumber(e.target.value)}
                  className="w-full p-3 border border-gray-300 rounded-lg ml-7"
                />
              )}
            </div>

            <button
              onClick={handleNext}
              className="w-full bg-blue-500 text-white py-3 rounded-lg hover:bg-blue-600 transition-colors"
            >
              Next
            </button>
          </div>
        );

      case 4: // Confirmation Code - matches Image 4 exactly
        return (
          <div className="p-6">
            <div className="flex justify-between items-center mb-6">
              <div>
                <h2 className="text-xl font-semibold text-gray-900">Enter Confirmation Code</h2>
                <p className="text-gray-500 text-sm mt-1">
                  Enter the 6-digit code we sent to +*********74
                </p>
              </div>
              <button onClick={handleClose}>
                <X className="w-5 h-5 text-gray-400" />
              </button>
            </div>

            <input
              type="text"
              placeholder="Enter Code"
              value={confirmationCode}
              onChange={(e) => setConfirmationCode(e.target.value)}
              className="w-full p-4 border border-gray-200 rounded-lg mb-4 text-gray-500"
            />

            <div className="text-right mb-8">
              <button className="text-blue-500 text-sm hover:underline">
                Resend Code in: 59 Second
              </button>
            </div>

            <button
              onClick={handleNext}
              className="w-full bg-blue-500 text-white py-3 rounded-lg hover:bg-blue-600 transition-colors"
            >
              Next
            </button>
          </div>
        );

      default:
        return null;
    }
  };

  return (
    <div className="w-full bg-white p-8">
      {/* Header */}
      <div className="flex items-center justify-between p-5 border-b shadow rounded-xl border-gray-200 mb-6">
        <h1 className="text-xl font-semibold text-gray-900">Suspicious Activity</h1>
        <MoreHorizontal className="w-5 h-5 text-gray-400" />
      </div>

      <div className="flex">
        {/* Sidebar */}
        <div className="w-1/4">
          {/* Profile Section */}
          <div className="p-6 border border-gray-200 rounded-lg shadow mb-6">
            <div className="flex items-center space-x-3 mb-6">
              <div className="w-16 h-16 rounded-full overflow-hidden">
                <img 
                  src="https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?w=64&h=64&fit=crop&crop=face" 
                  alt="Profile" 
                  className="w-full h-full object-cover"
                />
              </div>
              <div>
                <h3 className="font-semibold text-gray-900">Rohit Verma</h3>
                <p className="text-sm text-gray-500">@praveen420</p>
                <span className="inline-block px-2 py-1 text-xs bg-green-100 text-green-800 rounded mt-1">
                  Admin
                </span>
              </div>
            </div>
          </div>

          {/* Menu Items */}
          <div className="space-y-1 flex flex-col gap-4 border border-gray-200 rounded-lg shadow h-[640px] p-6">
            <div className="px-6 py-2 text-sm text-gray-600 cursor-pointer">
              Profile Details
            </div>
            <div className="px-6 py-2 bg-blue-50 border-l-4 border-blue-500 text-blue-700 font-medium">
              2 Factor Authentication
            </div>
            <div className="px-6 py-2 text-sm text-gray-600 hover:bg-gray-50 cursor-pointer">
              Device Info
            </div>
            <div className="px-6 py-2 text-sm text-gray-600 hover:bg-gray-50 cursor-pointer">
              Activity/IP Tracking
            </div>
            <div className="px-6 py-2 text-sm text-gray-600 hover:bg-gray-50 cursor-pointer">
              Login History
            </div>
          </div>
        </div>

        {/* Main Content */}
        <div className="flex-1 p-8 border border-gray-200 rounded-lg shadow ml-6">
          <div className="max-w-full">
            <h2 className="text-2xl font-semibold text-gray-900 mb-2">Two Factor Authentication</h2>
            <p className="text-gray-600 mb-8">
              Two-factor authentication protects your account by requiring an additional code when you log in on a device we don't recognize.
            </p>

            <div className="space-y-6">
              {/* Authentication app */}
              <div 
                className="flex items-center justify-between p-4 border border-gray-200 rounded-lg hover:bg-gray-50 cursor-pointer"
                onClick={() => handleMethodSelect('app')}
              >
                <div className="flex items-center space-x-4">
                  <div className="w-10 h-10 bg-gray-100 rounded-full flex items-center justify-center">
                    <Settings className="w-5 h-5 text-gray-600" />
                  </div>
                  <div>
                    <h3 className="font-medium text-gray-900">Authentication app</h3>
                    <p className="text-sm text-gray-500">
                      Lorem ipsum dolor sit amet, consectetur adipiscing elit, se eite usmod tempor incididunt ut labore
                    </p>
                  </div>
                </div>
                <div className="flex items-center space-x-3">
                  <ChevronRight className="w-5 h-5 text-gray-400" />
                </div>
              </div>

              {/* Text message */}
              <div 
                className="flex items-center justify-between p-4 border border-gray-200 rounded-lg hover:bg-gray-50 cursor-pointer"
                onClick={() => handleMethodSelect('sms')}
              >
                <div className="flex items-center space-x-4">
                  <div className="w-10 h-10 bg-gray-100 rounded-full flex items-center justify-center">
                    <MessageSquare className="w-5 h-5 text-gray-600" />
                  </div>
                  <div>
                    <h3 className="font-medium text-gray-900">Text message</h3>
                    <p className="text-sm text-gray-500">
                      a minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea
                    </p>
                  </div>
                </div>
                <div className="flex items-center space-x-3">
                  <ChevronRight className="w-5 h-5 text-gray-400" />
                </div>
              </div>

              {/* Email */}
              <div 
                className="flex items-center justify-between p-4 border border-gray-200 rounded-lg hover:bg-gray-50 cursor-pointer"
                onClick={() => handleMethodSelect('email')}
              >
                <div className="flex items-center space-x-4">
                  <div className="w-10 h-10 bg-gray-100 rounded-full flex items-center justify-center">
                    <Mail className="w-5 h-5 text-gray-600" />
                  </div>
                  <div>
                    <h3 className="font-medium text-gray-900">Email</h3>
                    <p className="text-sm text-gray-500">
                      se eite usmod tempor incididunt ut labore et dolore magna aliqua.
                    </p>
                  </div>
                </div>
                <div className="flex items-center space-x-3">
                  <ChevronRight className="w-5 h-5 text-gray-400" />
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* Modal */}
      {showModal && (
        <div className="fixed inset-0 bg-black/40 bg-opacity-50 flex items-center justify-center showFooter__">
          <div className="bg-white rounded-lg max-w-md w-full mx-4 max-h-[90vh] overflow-y-auto">
            {renderModalContent()}
          </div>
        </div>
      )}
    </div>
  );
};

export default AccountSettings;